#新增销售单 元素定位
Add: "id==saler_order_createSalesOrder_"
Buyer: "xpath==//label[(text()='Buyer')]//parent::div// following-sibling::div//input"
Buyer value: "xpath==//li[contains(text(),'variable')]"
Brand: "xpath==//label[(text()='Brand')]//parent::div// following-sibling::div//input"
Brand value: "xpath==//span[contains(text(),'variable')]"
product: "xpath==//label[(text()='Product')]//parent::div// following-sibling::div//input"
product value: "xpath==//span[(text()='variable')]"
Quantity: "xpath==//label[(text()='Quantity')]//parent::div// following-sibling::div//input"
Submit Sales: "xpath==//span[contains(text(),'Submit')]"
保存成功确认OK: "xpath==//span[contains(text(),'OK')]"
表格字段: "xpath==//div[normalize-space(text())='variable']/.."
表格指定列内容: "xpath==//td[contains(@class,'variable  ') and not(contains(@class, 'is-hidden'))]/div"
水平滚动条: "xpath==//div[contains(@class,'el-table__body-wrapper')]"

#根据销售订单筛选功能，查询销售订单ID
按销售单ID筛选: "xpath==//label[contains(text(),'Sales Order ID')]//parent::div//following-sibling::div//input"
Search: "xpath==//button[1]//span[contains(text(),'Search')]"
Loading: "xpath==//div[@class='el-loading-mask' and contains(@style, 'display: none;')]"
获取Sales Order ID文本: "xpath==//tbody//tr[1]//td[2]//div//div"
获取列表Status文本: "xpath==//div[@class='el-table__body-wrapper is-scrolling-left']//div[normalize-space(text())='variable']"
Get list Status Text: "xpath==//tbody//tr[1]//td[4]//div"
列表筛选创建开始日期: "id==salesorder_input_createDate"
列表筛选创建截止日期: "id==salesorder_input_createDate1"
Sales Order Unfold: "xpath==//span[normalize-space(text())='Unfold']"
订单状态查询: "xpath==//input[@class='el-input__inner salesorder_input_statusStr']"
订单买家点击: "id==salesorder_input_buyerCode"
订单买家查询: "xpath==//input[@class='el-input__inner salesorder_input_buyerCode1']"
订单买家和卖家选择: "xpath==//span[contains(text(),'variable')]"
订单卖家点击: "id==salesorder_input_sellerCode"
订单卖家查询: "xpath==//input[@class='el-input__inner salesorder_input_sellerCode1']"
物料ID查询: "xpath==//input[@class='el-input__inner salesorder_input_materialCode']"
品牌查询: "xpath==//input[@id='salesorder_input_brandName']"
Model点击: "xpath==//input[@id='salesorder_input_models']"
Model输入: "xpath==//input[@id='salesorder_input_models']//..//..//input[@class='el-select__input is-small']"
MarketName查询:  "xpath==//input[@id='salesorder_input_marketingNames']"
MarketName输入:  "xpath==//input[@id='salesorder_input_marketingNames']//..//..//div[@class='el-select__tags']//input"
ActivatedLossOrNot查询:  "xpath==//input[@class='el-input__inner salesorder_input_activatedLossFlag']"
创建人查询: "xpath==//input[@id='salesorder_input_createCodes']"
创建人输入: "xpath==//input[@class='el-input__inner salesorder_input_createCodes1']"
订单类型查询:  "xpath==//input[@class='el-input__inner salesorder_input_salesType']"
买家类型: "xpath==//input[@class='el-input__inner salesorder_input_buyerType']"
买家类型选择: "xpath==//body//div[6]//span[(text()='variable')]"
卖家类型: "xpath==//input[@class='el-input__inner salesorder_input_sellerType']"
卖家类型选择: "xpath==//body//div[7]//span[(text()='variable')]"
状态_品牌_model_ActivatedLossOrNot_单据类型_选择: "xpath==//span[(text()='variable')]"
获取列表第一行数据: "xpath==//tbody/tr[1]/td[variable]/div"
第一行的IMEIDeatail: "xpath==//div[@class='el-table__fixed-right']//tbody/tr[1]//span[contains(text(),'IMEI Detail')]"
IMEIDeatail页面的物料id: "xpath==//div[@class='el-dialog__body']//tbody/tr/td[variable]/div"
IMEIDeatail页面关闭按钮: "xpath==//span[contains(text(),'IMEI Detail')]//..//i[@class='el-dialog__close el-icon el-icon-close']"

#删除销售单
Delete Sales Order: "xpath==//span[contains(text(),'Delete')]"
Confirm Delete: "xpath==//span[normalize-space(text())='Confirm']"
Reset: "xpath==//span[normalize-space(text())='Reset']"
list Input Status Query: "xpath==//label[(text()='Status')]//parent::div// following-sibling::div//input"
list Click Status Value: "xpath==//span[normalize-space(text())='variable']"


#勾选新建的销售单，直接出库
勾选第一条销售单ID: "xpath==//tbody//tr[1]//td[1]//div//label//span//span"
Delivery button: "id==saler_order_scanImei_"
Sales Delivery iframe:  "id==iframe_sales_order_delivery"
Payment Mode: "xpath==//label[contains(text(),'Payment Mode')]//parent::div//following-sibling::div//input"
Payment Mode value: "xpath==//span[contains(text(),'variable')]"
Input IMEI: "css==[placeholder='Please enter IMEI/BoxID/SN, press enter or Check button to check']"
Check: "xpath==//span[contains(text(),'Check')]"
Submit Delivery: "xpath==//span[contains(text(),'Submit')]"

Get Scan Record IMEI: "xpath==//ul//li//div[text()='variable']"
Get Scan Record Success: "xpath==//div[normalize-space(text())='Success']"
关闭销售单菜单: "xpath==//span[normalize-space(text())='Sales Order']//span[@class='el-icon-close']"
关闭导出记录菜单: "xpath==//span[normalize-space(text())='Export Record']//span[@class='el-icon-close']"


#筛选IMEI Inventory Query页面，product对应的IMEI 元素定位
Unfold: "xpath==//span[contains(text(),'Unfold')]"
Material ID: "xpath==//input[@id='imeiinventoryquery_input_materialId']"
#IMEI库存点击Brand: "xpath==//div//input[@id='imeiinventoryquery_input_brandCodes']"
#IMEI库存选中Brand: "xpath==//*[@id='app']/div/div[2]/section/div/div[1]/form/div/div[2]/div[9]/div/div/div/div/div[2]/div/div[3]/div[1]/div[1]/ul/li[3]/span"
IMEI库存查询按钮: "xpath==//span[contains(text(),'Search')]"
获取IMEI文本内容: "xpath==//tbody//tr[1]//td[4]//div"
关闭IMEI Inventory Query: "xpath==//span[normalize-space(text())='IMEI Inventory Query']//span[@class='el-icon-close']"


#新建销售单，创建临时客户
Create Temporary Customer: "xpath==//span[normalize-space(text())='Create Temporary Customer']"
Temporary Customer Name: "id==salesorderadd_input_tmpEnterprise.clientName"
Temporary Contact No: "id==salesorderadd_input_tmpEnterprise.contactNo"
Business Type: "xpath==//input[@class='el-input__inner salesorderadd_input_tmpEnterprise.businessType']"
Business Type value: "xpath==//span[normalize-space(text())='variable']"

#对销售单直接出库操作，产品为无码的，买方为临时客户
Quantity Radio Button: "xpath==//span[normalize-space(text())='Quantity']"
Input Delivery Quantity: "xpath==//div[@class='el-input el-input--medium']//input"
Get Order Detail Product: "xpath==//div[@class='cell el-tooltip']"
Get New Delivery Quantity: "xpath==//div[normalize-space(text())='Delivery Quantity']/..//div[@class='num']"
Submit: "id==salesorderdelivery_Submit"

#Sales Order页面，打开IMEI Detail详情页断言
Sales Order IMEI Detail: "xpath==//tbody//tr[1]//td[not(contains(@class,'is-hidden'))]//div//div//span[text()='IMEI Detail']"
Sales Order IMEI Detail Header: "xpath==//div/..//div[@class='el-dialog__header']//span[text()='IMEI Detail']"
Sales Order IMEI Detail Total: "xpath==//span[text()='IMEI Detail']/../..//div//span[contains(text(), 'Total')]"
Close Sales Order IMEI Detail: "xpath==//div//span[text()='IMEI Detail']/..//button//i[@class='el-dialog__close el-icon el-icon-close']"


#列表导出销售单，导出成功后断言
More Option: "xpath==//span[normalize-space(text())='More Option']"
Export: "xpath==//span[normalize-space(text())='Export']"
Export Detail: "id==saler_order_export_details_"
Download Icon: "id==download-icon"
More: "xpath==//span[contains(text(),'More...')]"
Input Task Name: "xpath==//input[@class='el-input__inner exportrecord_input_taskName']"
Task Name value: "xpath==//div//ul//li//span[text()='variable']"
Export Record Search: "xpath==//span[contains(text(),'Search')]"
获取下载状态文本: "xpath==//tbody//tr[1]//td[2]/div/div"
获取任务名称文本: "xpath==//tbody//tr[1]//td[5]/div"
获取文件大小文本: "xpath==//tbody//tr[1]//td[7]//div"
获取用户ID文本:  "xpath==//tbody//tr[1]//td[8]//div"
获取创建日期文本: "xpath==//tbody//tr[1]//td[10]//div"
获取完成日期文本: "xpath==//tbody//tr[1]//td[11]//div"
获取导出时间: "xpath==//tbody//tr[1]//td[13]//div"
获取操作按钮文本: "xpath==//td[not(contains(@class ,'is-hidden'))]//button[@class='el-button el-button--text el-button--mini']/span/span"